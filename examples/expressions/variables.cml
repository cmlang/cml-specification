// Accessing operation parameters in contracts:

contract of query ItemCatalog.searchForItem(name: String; defaultItem: Item): Item?
{
    require name != "";

    return defaultItem;
}

// Accessing local variables in contracts:

contract of query ItemCatalog.searchForItem(name: String; defaultItem: Item): Item?
{
    require name != "";

    let returnedItem = defaultItem;

    return returnedItem;
}

// Accessing singletons in contracts:

singleton itemStore: Store;

contract of command ItemCatalog.addItem(item: Item)
{
    require itemStore | excludes item;

    ensure itemStore | includes item;
}

// Accessing other attributes in initialized/calculated attributes:

concept SomeConcept
{
    someAttribute: String = "someValue";
    initializedAttribute: String = someAttribute;
    /calculatedAttribute: String = initializedAttribute;
}

// Accessing attributes in invariant

invariant of SomeConcept
{
    someAttribute != "";
}
