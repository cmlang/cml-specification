
// Model (Abstract Syntax)

const primitiveTypeNames = [
    "Boolean", "Integer", "Decimal", "String", "Regex", // main primitive types
    "Byte", "Short", "Long", "Float", "Double", "Char"  // remaining primitive types
];

concept Type: NamedElement
{
    primitive: Boolean = primitiveTypeNames | exists name;
    cardinality: String?;

    concept: Concept?;

    /kind: String
    {
        given (cardinality = /\?/) return "optional";
        given (cardinality = /(\*|\+)/) return "set";
        return "required";
    }
}

// Validator (Well-Formedness Rules)

command validateType(type: Type)
{
    invoke validatePrimitiveType(type);
}
