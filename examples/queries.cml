concept Queries
{
    // Properties used in the queries:
    top_items: Item*;
    class: Class;
    children: Class*;
    top_orders: Order*;

    // Collection Path - Simplest type of query:
    self_path = self;
    single_var_path = class;
    path1 = class.children;
    path2 = top_orders.items.product;

    // Select / Reject:
    select_transform = top_items | select: name == "this";
    select_transform_nested = top_items
                                | select: name == "this"
                                | select: qty > 10;
    select_transform_nested_nested = top_items
                                        | select: name == "this"
                                        | select: qty > 10
                                        | select: number <= 10;
    reject_transform = top_items | reject: name == "this";

    // Yield:
    yield_transform = top_orders | yield: items;
    yield_transform_unique = top_orders | yield: items.product | distinct;

    // Recurse
    recurse_ancestors = class | recurse: ancestors;
    recurse_unique = class | recurse: ancestors | distinct;
    recurse_children = children
                        | recurse: children
                        | select: ranking > 10;

    // Enumeration:
    enumeration = for order in top_orders | select order.total > 100;
    enumeration_yield = for order in top_orders | yield: order.items;
    enumeration_nested = for order in top_orders, goldCustomer in goldCustomers
                         | select: order.customer == goldCustomer and
                                  order.total > 1000
                         | yield: order.customer.name;
}

concept Order
{
    customer: Customer;
    items: Item*;
    total: Decimal;
}

concept Item
{
    name: String;
    product: Product;
}

concept Customer
{
    name: String;
}

concept Product;

concept Class
{
    ancestors: Class*;
    children: Class*;
    ranking: Integer;
}
