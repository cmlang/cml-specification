
// Model (Abstract Syntax)

concept Concept: NamedElement, PropertyList
{
    abstract: Boolean;
    allAncestors: list of Concept* = directAncestors.allAncestors + directAncestors;
    directAncestors: list of Concept*;

    /inheritedProperties: list of Property* = ancestors.properties;
    /allProperties: list of Property* = properties + inheritedProperties;
}

invariant of Concept
{
    properties.typeRequired = false;
    properties.typeAllowed = true;
}

// Validator (Well-Formedness Rules)

command validateConcept(concept: Concept)
{
    invoke validateNamedElement(concept);

    invoke validatePropertyList(concept.properties);
}
