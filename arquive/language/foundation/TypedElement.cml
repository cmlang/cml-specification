
// Model (Abstract Syntax)

abstract concept TypedElement: NamedElement
{
    type: Type?;

    typeRequired: Boolean = true;
    typeAllowed: Boolean = true;

    invariants
    {
        given typeRequired require typeAllowed;
        given not typeAllowed require not typeRequired;

        // Notice that we cannot add any invariant on the "type" property,
        // because the concrete syntax allows the instantiation of malformed models,
        // which are validated once they have been synthesized.
    }
}

// Validator (Well-Formedness Rules)

command validateTypedElement(element: TypedElement)
{
    invoke validateNamedElement(element);

    invoke validateTypeRequired(element);

    invoke validateTypeNotAllowed(element);
}
